#!/usr/bin/env python

# Use this script to generate a command-line for invoking
# parted and creating partitions in "clean" zones.
# It reads the badblocks*.txt file generated by showbadblocks.

# this one is hardcoded device size
devsize = 1000204886016L / 512L
# hardcoded device name
device = '/dev/sdc'
# hardcoded file name with bad block list
badblockfile = 'badblocks_dev_sdc.txt'

sectorsize = 512L
# Must correspond to "minSpan" parameter passed to showbadblocks
stride = ( 10240L * 1024L ) / 512L

bads = []
spans = {}

f = open( badblockfile, 'r' )
for line in f:
    bads.append( int( line ) )

f.close()

for num in sorted( bads ):
    # we have a span. Define its lower and higher boundaries.
    offset = num / stride
    lowBlock = offset * stride
    uppBlock = lowBlock + stride

    # Now find if there is an adjacent block
    found = False
    for l, h in spans.iteritems():
        if h == lowBlock:
            spans[l] = uppBlock
            found = True
            break

    if not found:
        spans[lowBlock] = uppBlock

print "Commands:"

print "\nCreate partitions:"
last = stride
cnt = 1
line = "parted -s -a none %s unit s" % device
for k in sorted( spans.keys() ):
    line += " mkpart %d %d %d" % ( cnt, last, k )
    last = spans[k]
    cnt = cnt + 1

line += " mkpart %d %d %d" % ( cnt, last, devsize - stride )
print line

print "\nDelete partitions:"
line = "parted -s %s" % device
for k in range( 1, cnt + 1 ):
    line += " rm %d" % k

print line

print "\nCreate RAID JBOD array on partitions:"
# mdadm --create /dev/md1 --chunk=16 --level=linear --raid-devices=23 /dev/sdc1 /dev/sdc2 /dev/sdc3 /dev/sdc4 /dev/sdc5 /dev/sdc6 /dev/sdc7 /dev/sdc8 /dev/sdc9 /dev/sdc10 /dev/sdc11 /dev/sdc12 /dev/sdc13 /dev/sdc14 /dev/sdc15 /dev/sdc16 /dev/sdc17 /dev/sdc18 /dev/sdc19 /dev/sdc20 /dev/sdc21 /dev/sdc22 /dev/sdc23
line = "mdadm --create /dev/md0 --chunk=16 --level=linear --raid-devices=%d" % cnt
for k in range( 1, cnt + 1 ):
    line += " %s%d" % ( device, k )

print line

print "\nRemove RAID JBOD array and its traces:"

print "mdadm --stop /dev/md0"
print "mdadm --remove /dev/md0"
line = "mdadm --zero-superblock"
for k in range( 1, cnt + 1 ):
    line += " %s%d" % ( device, k )

print line
